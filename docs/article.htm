<!DOCTYPE HTML>
<!--------------------------------------------------------------------------->  
<!--                           INTRODUCTION                                

 The CodeProject article submission template (HTML version)

Using this template will help us post your article sooner. To use, just 
follow the 3 easy steps below:
 
     1. Fill in the article description details
     2. Add links to your images and downloads
     3. Include the main article text

That's all there is to it! All formatting will be done by our submission
scripts and style sheets. 

-->  
<!--------------------------------------------------------------------------->  
<!--                        IGNORE THIS SECTION                            -->
<html>
<head>
<title>CodeProject</title>
<Style>
BODY, P, TD { font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10pt }
BODY {padding:15px; }
H2,H3,H4,H5 { color: #ff9900; font-weight: bold; }
H2 { font-size: 13pt; }
H3 { font-size: 12pt; }
H4 { font-size: 10pt; color: black; }
PRE { BACKGROUND-COLOR: #FBEDBB; FONT-FAMILY: "Courier New", Courier, mono; WHITE-SPACE: pre; }
CODE { COLOR: #990000; FONT-FAMILY: "Courier New", Courier, mono; }
</style>
<link type="text/css" rel="stylesheet" 
      href="https://codeproject.global.ssl.fastly.net/App_Themes/CodeProject/Css/Main.min.css">
</head>
<body bgcolor="#FFFFFF" color=#000000>
<!--------------------------------------------------------------------------->  


<!-------------------------------     STEP 1      --------------------------->
<!--  Fill in the details (CodeProject will reformat this section for you) -->

    <pre>
Title:       msgfiles: simple file sending
Description: A .NET client-server application for sending files over a network
Abstract:    msgfiles is designed to be set up on a shared network to support users sending files to each other.  Well suitied to homes, schools, and offices, anywhere with connectivity to a common server.  An alternative to using network file sharing or cloud file sharing or sending services, especially for files that should not leave a network, or should not be shared with the entire network.

Author:      Michael Sydney Balloni
Email:       balloni.michael@yahoo.com

Language:    C#
Platform:    Windows
Technology:  .NET
Topic:       File Sending

Section      Desktop Programming
SubSection   Win32

License:     Apache 2.0
</pre>

<!-------------------------------     STEP 2      --------------------------->
<!--  Include download and sample image information.                       --> 

<ul class=download>
<!-- FORNOW - Collect the goodies -->
<li><a href="Article_demo.zip">Download demo project - XXX Kb </a></li>
<li><a href="Article_src.zip">Download source - XXX Kb</a></li>
</ul>

<!-------------------------------     STEP 3      --------------------------->

<!--  Add the article text. Please use simple formatting (<h2>, <p> etc)   -->

<h2>Introduction</h2>
<p>
    I worked for a cloud storage .com back in the 2000's,
    when clouds were just in the sky or on whiteboards.
    We called it online file storage.
    You'd upload your files, then you could access them anywhere...
    and send them to your friends.
    It wasn't file sharing like Napster / Gnutella / Limewire;
    you weren't sharing your CD collection with the whole world.
    But you could send your CD collection to your sister.
</p>
<p>
    A lot of tech has evolved and emerged since then, 
    and you can make the argument that there's no justification for file sharing, or sending,
    because there is a bustling marketplace for buying and renting access to files online.
    Pay your monthly fee for access to a file castle,
    and send whatever you want to somebody else paying a monthly fee to the same castle, problem solved.
    All legit, all above-board.
    Something like Napster will never (be allowed to) exist again.
</p>
<p>
    So what's this msgfiles business all about then?
    Well, what if what you want to send is not in one of these file castles?
    What if you've just created something new, and want to send it to a friend?
    There are services for sending attachments of any size.
    You could ZIP a large directory of files and send that as a large attachment.
    A CD collection to your sister even.
</p>
<p>
    And we're back to cloud computing.
</p>
<p>
    msgfiles is not that.
    It is all about locality, and simplicity.
    Your home, your work, your dorm.
    Run the server piece somewhere the people you care about can access,
    then everybody runs the client, and everybody can easily send files to each other.
</p>

<h2>msgfiles - The Client App</h2>
<p>
    Config:
    server IP:port
    from name

    Send:
    prompt for:
        to name
        message
        files and folders to send
        password for send
    build ZIP file with password
    build msg header JSON
    connect to server
    send request with header and file
    receive ticket
    display ticket, selectable, button to copy to clipboard

    Receive:
    ticket, password
    send ticket to server
    display msg metadata
    confirm download
    prompt for ZIP password
    prompt for folder to extract to
    download ZIP
    unzip
</p>

<h2>msgfilesd - The Server App</h2>
<p>
    port
    database
    directory
    ===
    Listens for connections
    Receives connection
    Fires off Task to process connection
    Task 
        receives line of version, verb, and header length
        receives header
        send:
            creates ticket
            receives file into directory
            adds record to database
            replies with ticket
        recv:
            receives ticket
            looks up database record
            sends database record
            deletes database record and file
            waits for client for go ahead to download file
            replies with file
            deletes file
    Background Timer deletes old files, older than X seconds, key not in DB
</p>


<h2>Conclusion and Points of Interest</h2>

<p>
    What did the reader learn in this article? Did you learn anything interesting/fun/annoying 
while writing the code? Any gotchas you came across?
</p>


<!-------------------------------    That's it!   --------------------------->
</body>

</html>

